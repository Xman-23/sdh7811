용어 
@Transactional :  
데이터베이스를 다룰 때 트랜잭션을 적용하면 데이터 추가, 갱신, 삭제 등으로 
이루어진 작업을 처리하던 중 오류가 발생했을 때 모든 작업들을 원상태로 되돌릴 수 있다. 
모든 작업들이 성공해야만 최종적으로 데이터베이스에 반영하도록 한다.

BCryptPasswordEncoder 

스프링 시큐리티(Spring Seurity) 프레임워크에서 제공하는 클래스 중 하나로 
비밀번호를 암호화하는 데 사용할 수 있는 메서드를 가진 클래스입니다.

orElse ,  orElseGet의 차이

orElse :  null이던말던 항상 불립니다.
orElseGet :  null일 때만 불립니다.

제네릭

제네릭(Generic) 은 클래스 / 인터페이스 / 메서드 등의 타입을 파라미터로 사용할 수 있게 해주는 역할을 한다. 

또한 비제네릭 타입의 코드에서 발생하는 불필요한 타입 변환으로 인한 프로그램 성능의 저하를 감소시킬 수 있다는 장점도 있다.

(List <Integer> list new = ArrayList <>(); 에서 많이 봤을 바로 <>가 바로 제네릭 표현식이다.)

1. 제네릭타입<?> : 모든 클래스 / 인터페이스 타입이 올 수 있다.
 
2. 제네릭타입<? extend 상위 타입> : 타입 파라미터와 대치하는 상위 타입과 하위 타입이 올 수 있다.
 
3. 제네릭타입<? super 하위 타입> : 타입 파라미터와 대치하는 하위 타입과 상위 타입이 올 수 있다.
